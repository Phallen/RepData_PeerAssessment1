select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
xjs
select(jd)
select(cran,X)
info()
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1",
| country == "US")
filter(cran, r_version == "3.1.1",
| country == "US")
filter(cran,r_version=="3.1.1"|country=="US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
filter(cran,!is.na(r_version))
.na(c(3, 5, NA, 10)) to see how is.na() works.
filter(cran,!is.na(r_version))
info()
filter(cran,is.na(c(3,4,NA,10)))
filter(cran,!is.na(c(3,4,NA,10)))
skip()
!is.na(c(3, 5, NA, 10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
)
arrange(cran2,package,ip_id)
arrange(cran2,country(ascending),r_vrsion(descending),ip_id(ascending))
arrange(cran2,country(ascending),r_version(descending),ip_id(ascending))
names(cran2)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10
)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package<-group_by(cran,variable)
by_package<-group_by(cran,package)
by_package
summarize(b_package,mean(size))
summarize(by_package,mean(size))
play()
?count
?n
?n_distinct
source('C:/Users/Eneida/AppData/Local/Temp/RtmpQzjM9Z/summarize1.R')
nxt()
submit()
submit()
pack_sum
quantile(ack_sum$count,probs=.99)
quantile(pack_sum$count,probs=.99)
filter(pack_sum,count>679)
top_counts<-filter(pack_sum,count>679)
top_counts()
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique)
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
play()
?Rcpp
nxt()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex,count,-grade)
play()
students
str(students)
gather(students, sex,number,-grade)
gather(students, sex,trees,-grade)
gather(students, soap,count,-grade)
nxt()
students2
res<-gather(students2, sex_class,count,-grade)
res
?separate
separate(data=res,col=sex_class,into=c("sex","class"))
submit()
students3
?gather
submit()
?spread
submit()
submit()
extract_numeric("class5")
submit()
?mutate
submit()
students4
submit()
submit()
students4
submit()
submit()
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
bind_rows(passed,failed)
sat
?select
?gather
sat %>%
select(-contains("total"))
sat %>%
select(-contains("total")) %>%
gather(c(read_male, read_fem, math_male, math_fem, write_male, write_fem), value=count, -score_range)
sat %>%
select(-contains("total")) %>%
gather(read_male, read_fem, math_male, math_fem, write_male, write_fem, value=count, -score_range)
sat %>%
select(-contains("total")) %>%
gather(read_male, read_fem, math_male, math_fem, write_male, write_fem, value=count, -score_range,key="part_sex") %>%
sat %>%
select(-contains("total")) %>%
gather(read_male, read_fem, math_male, math_fem, write_male, write_fem, value=count, -score_range,key="part_sex")
?separate
sat %>%
select(-contains("total")) %>%
gather(read_male, read_fem, math_male, math_fem, write_male, write_fem, value=count, -score_range,key="part_sex") %>%
separate(col=part_sex,into("part,sex"))> %>%
print
sat %>%
select(-contains("total")) %>%
gather(read_male, read_fem, math_male, math_fem, write_male, write_fem, value=count, -score_range,key="part_sex") %>%
separate(col=part_sex,into("part,sex")) %>%
print
sat %>%
select(-contains("total")) %>%
gather(read_male, read_fem, math_male, math_fem, write_male, write_fem, value=count, -score_range,key="part_sex") %>%
separate(col=part_sex,into part,sex) %>%
print
submit()
submit()
skip()
?group_by
submit()
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part,sex) %>%
mutate(total=sum(count),prop=count/total) %>% print
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(pacakge=lubridate)
help(package=lubridate)
today()
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1/9/2012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
?now
now(tzone="America/New_York")
now("America/New_York")
nyc<-now("America/New_York")
nyc
depart<-nyc+days(2)
depart
?update
?update{lubridate}
?update::lubridate
?lubridate::update
skip()
depart
arrive<-nyc+hours(15)+minutes(50)
arrive<depart-nyc+hours(15)+minutes(50)
arrive<-depart+nyc+hours(15)+minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive<-with_tz(arrive, "Asia/Hong_Kong")
arrive
mdy("June 17, 2008",tz = "Singapore")
last_time<-mdy("June 17, 2008",tz = "Singapore")
last_time
?new_arrival
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
set.seed(13435)
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
X
?sample
X <- X[sample(1:5),]
X
X$var2[c(1,3)] = NA
X
X[,1]
X[,"var1"]
X[1:2,"var2"]
X[X$var2>8,]
which(X$var2>8)
sort(X$var2)
order(X$var1)
?arrange
??arrange
library("swirl")
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by()
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
?count
?n
?n_distinct
source('C:/Users/Eneida/AppData/Local/Temp/RtmpgVo3Mf/summarize1.R')
submit()
pack_sum
quantile(pac_sum$count,probs=.99)
quantile(pack_sum$count,probs=.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=.99)
top_unique<-filter(pack_sum,pack_sum$unique>465)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
swirl()
library(swirl)
swirl()
submit()
submit()
?select
reset()
submit()
submit()
submit()
submit()
submit()
library(dplyr)
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,col=sex_class,into=c("sex","class"))
submit()
students3
?gather
submit()
?spread
submit()
extract_numeric("class5")
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
?filter
?filter
submit()
submit()
submit()
?unique
?unique
submit()
submit()
reset()
help
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
bind_rows(passed,failed)
sat
?separate
submit()
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
hep(package=lubridate)
help(package=lubridate)
today()
this_day<-today()
this_day
month(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
second(this_moment)
ymd("1989-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12,1975")
ymd("March 12, 1975")
mdy("March 12, 1975")
mdy(25081985)
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
this_moment<-update(this_moment, hours = 8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment)
this_moment<-update()
this_moment<-update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc<-now()+2
nyc<-now("America/New_York")
nyc
depart<-nyc+days(2)
depart
?update
depart<-update(nyc,hours=17,minutes=34)
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008")
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
?select
library(dplyr)
?select
?subset
?melt
library(reshape2)
?melt
??download.file
source('C:/Users/Eneida/R_Class/Repo Class/Assign1/Actmon.R')
source('C:/Users/Eneida/R_Class/Repo Class/Assign1/Actmon.R')
file.name
source('C:/Users/Eneida/R_Class/Repo Class/Assign1/Actmon.R')
?plot
source('C:/Users/Eneida/R_Class/Repo Class/Assign1/Actmon.R')
source('C:/Users/Eneida/R_Class/Repo Class/Assign1/Actmon.R')
?format
288*61
setwd("C:/Users/Eneida/R_Class/RepoClass/Assign1A/RepData_PeerAssessment1")
library("knitr")
knit2html("PA1_template.Rmd")
?knit2html
markdownToHTML("PA1_template.md")
library("markdown")
markdownToHTML("PA1_template.md")
getwd()
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
View(activity)
24*60
?interval
?as.duration()
load("lubridate")
library("lubridate")
?as.duration()
library(lubridate)
?as.duration()
getwd()
knit2html("PA1_template.Rmd")
total.stepsperday
mean(total.stepsperday)
median(total.stepsperday)
View(activity_nm)
View(activity)
View(activity_nm)
?tapply
?format
knit2html("PA1_template.Rmd")
288*61
knit2html("PA1_template.Rmd")
?for
?loop
??loop
?control
?control flow
knit2html("PA1_template.Rmd")
mean.stepsperinterval2
View(activity_nm)
View(activity)
View(activity_nm)
sum(is.na(activity_nm$steps))
sum(is.na(mean.stepsperinterval))
is.na(mean.stepsperinterval)
View(activity_nm)
knit2html("PA1_template.Rmd")
View(activity_nm)
View(activity)
View(activity_nm)
knit2html("PA1_template.Rmd")
z
knit2html("PA1_template.Rmd")
sum(is.na(activity_nm$interval))
sum(is.na(as.factor(activity_nm$interval)))
sum(is.na(mean.stepsperinterval2))
24*60
1440/5
sum(is.na(activity_nm$steps))
?mod
??mod
289%%288
1%%288
knit2html("PA1_template.Rmd")
1%%288
288%%288
287%%288
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
View(activity)
total.stepsperday
mean(total.stepsperday)
median(total.stepsperday)
plot(mean.stepsperinterval)
dev.off()
?dev.off
